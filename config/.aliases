# Replace jq with gojq
alias realjq="jq"
alias jq="gojq"

loremcopy() {
  lipsum-cli "$@" | print_n_copy
}

alias uuid="uuidgen | print_n_copy"
alias myip="dig +short myip.opendns.com @resolver1.opendns.com | print_n_copy"

whois_more() {
 whois "$@" | more
}
alias whois=whois_more

rdap_more() {
 rdap "$@" | more
}
alias rdap=rdap_more

urlencode() {
 arg_or_paste "$@" | jq -s -R -r @uri | print_n_copy
}
urldecode() {
 arg_or_paste "$@" | jq -s -R -r @urid | print_n_copy
}
base64encode() {
  arg_or_paste "$@" | base64 | print_n_copy
}
base64decode() {
  arg_or_paste "$@" | base64 -d | print_n_copy
}

alias formatjson='wl-paste | json_reformat | print_n_copy'
alias minifyjson='wl-paste | jq -c -r | print_n_copy'

tomp4() {
 ffmpeg -fflags +genpts -i "$1" -r 24 -vf "pad=ceil(iw/2)*2:ceil(ih/2)*2" "$(basename "${1%.*}").mp4"
}

alias ngrok='docker run --net=host -it -e NGROK_AUTHTOKEN="$NGROK_AUTHTOKEN" --rm ngrok/ngrok:latest'
ngrok_url() {
 curl -s http://127.0.0.1:4040/api/tunnels | jq -r '.tunnels[0].public_url' | print_n_copy
}

qrcode() {
 arg_or_paste "$@"| qrtool encode -t unicode
}

alias ngrokqr='qrcode $(ngrok_url)'

alias curltime="curl -w \"@$HOME/.curl_format\" -o /dev/null -s "

alias rich2md="wl-paste -t text/html | html2markdown --plugin-table --opt-table-header-promotion | print_n_copy"
alias md2rich="wl-paste -n | pandoc | wl-copy -t text/html"
csv2md() {
  duckdb -markdown $1 "SELECT * from '$1';" | print_n_copy
}

kill_port() {
  sudo fuser -k $1/tcp
}

alias getpath="readlink -f"
alias pathperm="namei -l"

# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'
